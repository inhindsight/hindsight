receive:
  service_udp:
    type: LoadBalancer
  service:
    type: ClusterIP
broadcast:
  service:
    type: ClusterIP
acquire:
  service:
    type: ClusterIP
ingress:
  host: hindsight.local
  tls: []
strimzi:
  kafka:
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 512Mi
  zookeeper:
    resources:
      requests:
        cpu: 10m
        memory: 512Mi
      limits:
        cpu: 100m
        memory: 512Mi
nginx-ingress:
  controller:
    service:
      type: LoadBalancer
presto:
  postgres:
    service:
      externalAddress: "localhost"
  presto:
    ingress:
      enable: true
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
      hosts: [storage.hindsight.local/ui]
  minio:
    ingress:
      enable: true
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
      hosts: [storage.hindsight.local/minio.*]
  view_state_apps:
    broadcast:
      db:
        user: broadcast_app_user
        password: broadcast123
        name: broadcast_app_state
global:
  objectStore:
    bucketName: hindsight-object-storage
    region: local
    accessKey: hindsightAccessKey
    accessSecret: hindsightAccessSecret
    minio:
      enabled: true
      port: 9000
      scheme: "http://"
