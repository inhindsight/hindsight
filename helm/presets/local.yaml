receive:
  service:
    type: NodePort
  service_tcp:
    type: NodePort
broadcast:
  service:
    type: ClusterIP
acquire:
  service:
    type: ClusterIP
ingress:
  host: hindsight.local
strimzi:
  kafka:
    resources:
      requests:
        cpu: 500m
        memory: 1000M
      limits:
        cpu: 500m
        memory: 1000M
  zookeeper:
    resources:
      requests:
        cpu: 10m
        memory: 512Mi
      limits:
        cpu: 100m
        memory: 512Mi
redis:
  enabled: true
  externalAddress: ""
nginx-ingress:
  controller:
    service:
      type: LoadBalancer
prometheus-operator:
  prometheus:
    ingress:
      hosts: [prometheus.hindsight.local]
    prometheusSpec:
      retentionSize: 1GiB
  alertmanager:
    alertmanagerSpec:
      retention: 30m
    ingress:
      hosts: [alertmanager.hindsight.local]
  grafana:
    adminPassword: hindsight
    ingress:
      hosts: [grafana.hindsight.local]
presto:
  presto:
    ingress:
      enable: true
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
      hosts: [storage.hindsight.local/ui]
  minio:
    ingress:
      enable: true
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
      hosts: [storage.hindsight.local/minio.*]
global:
  objectStore:
    bucketName: hindsight-object-storage
    region: local
    accessKey: hindsightAccessKey
    accessSecret: hindsightAccessSecret
    minio:
      enabled: true
      port: 9000
      scheme: "http://"
