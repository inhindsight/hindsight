#!/usr/bin/env bash

set -xeo pipefail

function usage {
    echo "USAGE: ./scripts/install [RELEASE_NAME] [NAMESPACE] [aws|local] [environmentName] [<key=value>, ...]"
    echo
    echo "EXAMPLE"
    echo "    ./scripts/install foo bar local dev abc=123 x.y.z=42"
    echo "    ./scripts/install abc default aws dev image.tag=latest"
    echo
    exit 0
}

function info {
    local -r message=${1:?MESSAGE REQUIRED}
    echo "[INFO] $message"
}

function check_strimzi {
    local timeout=${1:-10s}

    kubectl wait pod \
            --selector name=strimzi-cluster-operator \
            --for condition=Ready \
            --timeout=${timeout}
}

function deps {
    local -r added_p=$(helm repo list | grep -s google)

    if [[ ! $added_p ]]; then
        info "Installing Helm dependencies"
        helm repo add google https://kubernetes-charts.storage.googleapis.com
        (cd ./helm; helm dependency build)
    fi
}

function strimzi {
    if [[ ! $(check_strimzi) ]]; then
        info "Adding strimzi repo"
        helm repo add strimzi https://strimzi.io/charts/

        info "Installing Strimzi"
        helm upgrade strimzi-kafka-operator strimzi/strimzi-kafka-operator \
             --install \
             --version 0.16.2 \
             --set watchAnyNamespace=true

        check_strimzi 300s
    fi
}

function hindsight {
    local -r location="${3:?Location required.}"

    if [[ "$location" == "aws" ]]; then
        aws_deploy "${@}"
    else
        local_deploy "${@}"
    fi
}


function aws_deploy {
    local -r release="${1:?Release name required.}"
    local -r ns="${2:?Namespace required.}"
    local -r location="${3:?Location required.}"
    local -r environment="${4:?Environment required.}"
    shift 4

    local -r username=$(aws secretsmanager get-secret-value --secret MetastoreInfo-${environment} | jq -rc .SecretString | jq .username | tr -d "\n\"")
    local -r password=$(aws secretsmanager get-secret-value --secret MetastoreInfo-${environment} | jq -rc .SecretString | jq .password | tr -d "\n\"")
    local -r endpointAddress=$(aws secretsmanager get-secret-value --secret MetastoreInfo-${environment} | jq -rc .SecretString | jq .endpoint | tr -d "\n\"")
    local -r bucketName=$(aws secretsmanager get-secret-value --secret MetastoreInfo-${environment} | jq -rc .SecretString | jq .bucket | tr -d "\n\"")

    if [ $# -gt 0 ]; then
        local -r vals=$(IFS=, ; echo "$*")
        local -r set_values="--set $vals"
    fi

    deps

    info "Installing Hindsight"
    helm upgrade ${release} ./helm \
         --install \
         --namespace ${ns} \
         --values ./helm/presets/${location}.yaml \
         --set presto.postgres.service.externalAddress=${endpointAddress} \
         --set presto.postgres.db.username=${username} \
         --set presto.postgres.db.password=${password} \
         --set global.objectStore.bucketName=${bucketName} \
         ${set_values}
}

function local_deploy {
    local -r release="${1:?Release name required.}"
    local -r ns="${2:?Namespace required.}"
    local -r location="${3:?Location required.}"
    local -r environment="${4:?Environment required.}"
    shift 4

    if [ $# -gt 0 ]; then
        local -r vals=$(IFS=, ; echo "$*")
        local -r set_values="--set $vals"
    fi

    deps

    info "Installing Hindsight"
    helm upgrade ${release} ./helm \
        --install \
        --namespace ${ns} \
        --values ./helm/presets/${location}.yaml \
        ${set_values}
}

[[ "$1" == "-h" || "$1" == "--help" ]] && usage

strimzi
hindsight "${@}"
